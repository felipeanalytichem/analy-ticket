-- Migration to ensure correct table name for message reactions
-- This handles cases where the old migration created message_reactions instead of chat_message_reactions

DO $$
BEGIN
    -- If message_reactions exists but chat_message_reactions doesn't, rename it
    IF EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_schema = 'public' AND table_name = 'message_reactions'
    ) AND NOT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_schema = 'public' AND table_name = 'chat_message_reactions'
    ) THEN
        -- Rename the table
        ALTER TABLE message_reactions RENAME TO chat_message_reactions;
        
        -- Update indexes
        ALTER INDEX IF EXISTS idx_message_reactions_message_id RENAME TO idx_chat_message_reactions_message_id;
        ALTER INDEX IF EXISTS idx_message_reactions_user_id RENAME TO idx_chat_message_reactions_user_id;
        
        RAISE NOTICE 'Renamed message_reactions table to chat_message_reactions';
        
    -- If neither exists, create the table with the correct name
    ELSIF NOT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_schema = 'public' AND table_name = 'chat_message_reactions'
    ) THEN
        CREATE TABLE chat_message_reactions (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            message_id UUID NOT NULL REFERENCES chat_messages(id) ON DELETE CASCADE,
            user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
            emoji VARCHAR(10) NOT NULL,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            UNIQUE(message_id, user_id, emoji)
        );
        
        -- Enable RLS
        ALTER TABLE chat_message_reactions ENABLE ROW LEVEL SECURITY;
        
        -- Create policies
        CREATE POLICY "Users can view reactions on accessible messages" ON chat_message_reactions
        FOR SELECT USING (
            message_id IN (
                SELECT cm.id FROM chat_messages cm
                JOIN ticket_chats tc ON cm.chat_id = tc.id
                JOIN tickets_new t ON tc.ticket_id = t.id
                WHERE t.user_id = auth.uid() OR t.assigned_to = auth.uid()
                OR EXISTS (
                    SELECT 1 FROM users 
                    WHERE id = auth.uid() 
                    AND role IN ('admin', 'agent')
                )
            )
        );
        
        CREATE POLICY "Users can manage their own reactions" ON chat_message_reactions
        FOR ALL USING (user_id = auth.uid());
        
        -- Create indexes
        CREATE INDEX idx_chat_message_reactions_message_id ON chat_message_reactions(message_id);
        CREATE INDEX idx_chat_message_reactions_user_id ON chat_message_reactions(user_id);
        
        -- Grant permissions
        GRANT SELECT, INSERT, UPDATE, DELETE ON chat_message_reactions TO authenticated;
        
        -- Enable real-time
        ALTER TABLE chat_message_reactions REPLICA IDENTITY FULL;
        
        RAISE NOTICE 'Created chat_message_reactions table';
    ELSE
        RAISE NOTICE 'Table chat_message_reactions already exists with correct name';
    END IF;
END $$; 